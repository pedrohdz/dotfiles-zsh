#------------------------------------------------------------------------------
# Tmux Plugin Manager - Plugins
#------------------------------------------------------------------------------
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-battery'
set-option -g @plugin 'tmux-plugins/tmux-cpu'
# set-option -g @plugin 'tmux-plugins/tmux-online-status'  # TODO - Not working


#------------------------------------------------------------------------------
# Basic configuration
#------------------------------------------------------------------------------
# Set prefix to Meta
set-option -g prefix M-Space
unbind-key M-b
bind-key M-Space send-prefix

# default command to keep from logging in twice
set-option -g default-command "$SHELL"

# Use vi keys
set-option -g mode-keys vi
set-option -g status-keys vi
#set-option -g history-file

# set-option -g pane-active-border-style fg=colour245,bg=colour245
# set-option -g pane-border-style fg=colour238,bg=colour238

# Other minor options
set-option -g base-index 1
set-option -g set-titles on

set-option -g display-time 1000
set-option -g display-panes-time 5000
set-option -g message-limit 100
set-option -g history-limit 20000
set-option -g default-terminal "tmux-256color"
set-option -g word-separators "!\"#$%&'()*+,:;<=>?@[\\]^`{|}~¬─"
set-option -g mouse on

set-window-option -g visual-bell on
set-window-option -g bell-action other

# Thank you:
#  - https://www.reddit.com/r/tmux/comments/mesrci/tmux_2_doesnt_seem_to_use_256_colors/
#  - https://gist.github.com/ssh352/785395faad3163b2e0de32649f7ed45c#rgb-colors
set-option -ga terminal-overrides "*256col*:Tc"
set-option -ga terminal-overrides "*256col*:RGB"
set-environment -g COLORTERM "truecolor"

if-shell 'uname -o | grep -q Darwin' {
  set-option -g copy-command pbcopy
}


#------------------------------------------------------------------------------
# Mouse
#------------------------------------------------------------------------------

# bind-key    -T copy-mode        MouseDown1Pane       select-pane
# bind-key    -T copy-mode        MouseDrag1Pane       select-pane \; send-keys -X begin-selection
# bind-key    -T copy-mode        MouseDragEnd1Pane    send-keys -X copy-pipe-and-cancel
# bind-key    -T copy-mode        WheelUpPane          select-pane \; send-keys -X -N 5 scroll-up
# bind-key    -T copy-mode        WheelDownPane        select-pane \; send-keys -X -N 5 scroll-down
# bind-key    -T copy-mode        DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
# bind-key    -T copy-mode        TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
# bind-key    -T copy-mode-vi     MouseDown1Pane       select-pane
# bind-key    -T copy-mode-vi     MouseDrag1Pane       select-pane \; send-keys -X begin-selection
# bind-key    -T copy-mode-vi     MouseDragEnd1Pane    send-keys -X copy-pipe-and-cancel
# bind-key    -T copy-mode-vi     WheelUpPane          select-pane \; send-keys -X -N 5 scroll-up
# bind-key    -T copy-mode-vi     WheelDownPane        select-pane \; send-keys -X -N 5 scroll-down
# bind-key    -T copy-mode-vi     DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
# bind-key    -T copy-mode-vi     TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
# bind-key    -T root             MouseDown1Pane       select-pane -t = \; send-keys -M
# bind-key    -T root             MouseDown1Status     select-window -t =
# bind-key    -T root             MouseDown2Pane       select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { paste-buffer -p }
# bind-key    -T root             MouseDown3Pane       if-shell -F -t = "#{||:#{mouse_any_flag},#{&&:#{pane_in_mode},#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}}}" { select-pane -t = ; send-keys -M } { display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z } }
# bind-key    -T root             MouseDown3Status     display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
# bind-key    -T root             MouseDown3StatusLeft display-menu -T "#[align=centre]#{session_name}" -t = -x M -y W Next n { switch-client -n } Previous p { switch-client -p } '' Renumber N { move-window -r } Rename n { command-prompt -I "#S" { rename-session "%%" } } '' "New Session" s { new-session } "New Window" w { new-window }
# bind-key    -T root             MouseDrag1Pane       if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -M }
# bind-key    -T root             MouseDrag1Border     resize-pane -M
# bind-key    -T root             WheelUpPane          if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -e }
# bind-key    -T root             WheelUpStatus        previous-window
# bind-key    -T root             WheelDownStatus      next-window
# bind-key    -T root             DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel }
# bind-key    -T root             TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel }
# bind-key    -T root             M-MouseDown3Pane     display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }


# bind-key    -T root             DoubleClick1Pane     select-pane -t = \;
#   if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { 
#     send-keys -M 
#   } {
#     copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel
#   }
#
# alternatives

# Clearing built-in/default mouse bindings.
unbind-key -T copy-mode    MouseDown1Pane
unbind-key -T copy-mode    MouseDrag1Pane
unbind-key -T copy-mode    MouseDragEnd1Pane
unbind-key -T copy-mode    WheelUpPane
unbind-key -T copy-mode    WheelDownPane
unbind-key -T copy-mode    DoubleClick1Pane
unbind-key -T copy-mode    TripleClick1Pane
unbind-key -T copy-mode-vi MouseDown1Pane
unbind-key -T copy-mode-vi MouseDrag1Pane
unbind-key -T copy-mode-vi MouseDragEnd1Pane
unbind-key -T copy-mode-vi DoubleClick1Pane
unbind-key -T copy-mode-vi TripleClick1Pane
unbind-key -T root         DoubleClick1Pane
unbind-key -T root         MouseDown1Pane
unbind-key -T root         MouseDrag1Pane
unbind-key -T root         TripleClick1Pane

# FIXME - Temp
unbind-key -T copy-mode-vi M-MouseDown1Pane
unbind-key -T copy-mode-vi M-MouseDown3Pane
unbind-key -T copy-mode-vi M-MouseUp1Pane
unbind-key -T copy-mode-vi M-MouseUp3Pane
unbind-key -T copy-mode-vi M-MouseDrag1Pane

bind-key -T root MouseDown1Pane {
  select-pane -t =
  send-keys -M
}

bind-key -T root M-MouseDown1Pane {
  select-pane -t =
  copy-mode
}

bind-key -T copy-mode-vi M-MouseDown1Pane {
  select-pane -t =
  send-keys -X begin-selection
}

bind-key -T copy-mode-vi M-MouseDrag1Pane {
  select-pane -t =
  send-keys -X begin-selection
}

bind-key -T copy-mode-vi M-MouseDown3Pane {
  select-pane -t =
  # send-keys -X copy-selection
  send-keys -X copy-pipe
  send-keys -X clear-selection
  send-keys -X cancel
  display-message -d 2000 'Selection copied…'
}

bind-key -T copy-mode-vi M-DoubleClick1Pane {
  select-pane -t =
  send-keys -X select-word
  run-shell -d 0.1
  # send-keys -X copy-selection
  send-keys -X copy-pipe
  send-keys -X clear-selection
  send-keys -X cancel
  display-message -d 2000 "Word copied…"
}

bind-key -T copy-mode-vi M-TripleClick1Pane {
  select-pane -t =
  send-keys -X select-line
  run-shell -d 0.1
  # send-keys -X copy-selection
  send-keys -X copy-pipe
  send-keys -X clear-selection
  send-keys -X cancel
  display-message -d 2000 "Line copied…"
}


bind-key -T copy-mode-vi Escape { send-keys -X cancel; }
bind-key -T copy-mode-vi q { send-keys -X cancel; }

# Copy & paste like Vim
bind-key -T copy-mode-vi y {
  # send-keys -X copy-selection
  send-keys -X copy-pipe
  send-keys -X clear-selection
  send-keys -X cancel
  display-message "Selection copied…"
}

bind-key   -T copy-mode-vi Enter  send-keys -X cursor-down
bind-key   -T copy-mode-vi v      send-keys -X begin-selection
bind-key   -T copy-mode-vi \\     send-keys -X clear-selection
bind-key   p paste-buffer
bind-key   P save-buffer "/tmp/tmux-paste-buffer" \; \
             display-message "Copy buffer saved to: /tmp/tmux-paste-buffer"


#------------------------------------------------------------------------------
# Status Bar
#------------------------------------------------------------------------------
set-option -g @_icon_color 'gold'
set-option -g @_info_bg_color 'colour236'
set-option -g @_status_bg_color 'colour53'
set-option -g @_status_fg_color 'white'

set-option -g @_divider '#[fg=white,bold]│#[nobold]'
set-option -g @_divider_soft ' '
set-option -g @_ends_style '#[bg=white,fg=black,bold]'

set-option -g @batt_remain_short 'true'
set-option -g @batt_icon_status_charged '󱐋 '
set-option -g @batt_icon_status_charging '󰚥 '
set-option -g @batt_icon_status_attached '󱐥 '
set-option -g @batt_icon_status_discharging '󰁹 '

set-option -g status-interval 10
set-option -g status-style 'bg=#{@_status_bg_color},fg=#{@_status_fg_color}'
set-option -g status-right-length 0

set-option -g window-status-current-style 'bg=colour55,bold'
# set-option -g window-status-activity-style 'bg=colour55,fg=black,bold'
set-option -g window-status-format ' #I･#W#F '
set-option -g window-status-current-format ' #I･#W#F '

# --- status-left --- 
set-option -g status-left '\
#{@_ends_style}#{session_name}:#{window_index}.#{pane_index}\
#[fg=#{@_status_bg_color}]▐\
#[default]\
'

# --- status-right --- 
set-option -g status-right '\
#[bg=#{@_info_bg_color},fg=#{@_status_bg_color}]▌\
\
#[fg=#{@_icon_color}] #{ram_fg_color}#{ram_percentage}\
#{@_divider_soft}\
#[fg=#{@_icon_color}] #{cpu_fg_color}#{cpu_percentage}\
\
#{@_divider}\
\
#[fg=#{@_icon_color}]#{battery_icon_status}\
#{battery_color_fg}#[bg=#{@_info_bg_color}]#{battery_percentage}\
#{@_divider_soft}\
#{battery_color_fg}#[bg=#{@_info_bg_color}]#{battery_remain}\
\
#{@_divider}\
\
#[fg=#{@_icon_color}]󰨳 #[fg=#{@_status_fg_color}]%V\
#{@_divider_soft}\
#[fg=#{@_icon_color}]󰸗 #[fg=#{@_status_fg_color}]%m-%d\
#{@_divider_soft}\
#[fg=#{@_icon_color}]󰅐 #[fg=#{@_status_fg_color}]%H:%M\
▐\
#{@_ends_style}#{user}@#{host}\
#[default]\
'


#------------------------------------------------------------------------------
# MODE(select mode)
#------------------------------------------------------------------------------
bind-key -n M-m \
      switch-client -T MODE_SELECT_MODE \; \
      display-message 'MODE(select mode) - r=resize pane, m=move pane'

bind-key -T MODE_SELECT_MODE r \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_SELECT_MODE m \
    select-pane -m \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'


#------------------------------------------------------------------------------
# MODE(resize pane)
#------------------------------------------------------------------------------
# Single step rezize
bind-key -T MODE_PANE_RESIZE Up \
    resize-pane -U \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE Down \
    resize-pane -D \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE Left \
    resize-pane -L \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE Right \
    resize-pane -R \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

# Five (5) step resize
bind-key -T MODE_PANE_RESIZE S-Up \
    resize-pane -U 5 \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE S-Down \
    resize-pane -D 5 \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE S-Left \
    resize-pane -L 5 \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'

bind-key -T MODE_PANE_RESIZE S-Right \
    resize-pane -R 5 \; \
      switch-client -T MODE_PANE_RESIZE \; \
      display-message 'MODE(resize pane) - Arrow keys resize, shift to resize faster'


#------------------------------------------------------------------------------
# MODE(move pane)
#------------------------------------------------------------------------------
#----
# Final commands
#----
# Swap panes
bind-key -T MODE_PANE_MOVE s \
    swap-pane -d \; \
    select-pane -M

# Join panes horizontally
bind-key -T MODE_PANE_MOVE j \
    join-pane \; \
    select-pane -M

# Join panes vertically
bind-key -T MODE_PANE_MOVE J \
    join-pane -v \; \
    select-pane -M

#----
# Moving around to target
#----
# Moving around - Windows
bind-key -T MODE_PANE_MOVE C-Right \
    next-window \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'

bind-key -T MODE_PANE_MOVE C-Left \
    previous-window \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'

# Moving around - Panes
bind-key -T MODE_PANE_MOVE S-Up \
    select-pane -U \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'

bind-key -T MODE_PANE_MOVE S-Down \
    select-pane -D \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'

bind-key -T MODE_PANE_MOVE S-Left \
    select-pane -L \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'

bind-key -T MODE_PANE_MOVE S-Right \
    select-pane -R \; \
      switch-client -T MODE_PANE_MOVE \; \
      display-message 'MODE(move pane) - s=swap, j=join horizontal, J=join vertical'


#------------------------------------------------------------------------------
# Key Bindings
#------------------------------------------------------------------------------
# Text search
bind-key    ? copy-mode \; \
              command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# Slightly better help keys
bind-key   'h' list-keys

# force a reload of the config file
bind-key   r source-file     "$XDG_CONFIG_HOME/tmux/tmux.conf" \; \
             display-message "Reloaded $XDG_CONFIG_HOME/tmux/tmux.conf"

# Cycle panel layouts
bind-key   -r Space next-layout

# New windows & Splits
unbind-key '"'
unbind-key %
bind-key   'c' new-window
bind-key   'C' new-window -c "#{pane_current_path}"
bind-key   '\' split-window -h
bind-key   '|' split-window -h -c "#{pane_current_path}"
bind-key   '-' split-window -v
bind-key   '_' split-window -v -c "#{pane_current_path}"

# Find windows containing text
unbind-key -T prefix f
bind-key   /  command-prompt "find-window '%%'"

# Moving around - Windows
bind-key   -n C-Right next-window
bind-key   -n C-Left previous-window

# Relocating windows
bind-key   -n C-S-Left swap-window -d -t -1
bind-key   -n C-S-Right swap-window -d -t +1

# Moving around - Panes
bind-key   -n S-Up select-pane -U
bind-key   -n S-Down select-pane -D
bind-key   -n S-Left select-pane -L
bind-key   -n S-Right select-pane -R


#------------------------------------------------------------------------------
# Tmux Plugin Manager - Run
#------------------------------------------------------------------------------
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
